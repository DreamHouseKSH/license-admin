name: Deploy Node Backend

on:
  push:
    branches:
      - main # 또는 사용하는 기본 브랜치 이름
    paths:
      # Node.js 백엔드 관련 파일 변경 시 워크플로우 실행
      - 'NodeBackendServer/**' # NodeBackendServer 디렉토리 내 모든 파일
      - 'package.json'         # 의존성 변경 감지
      - 'package-lock.json'    # 의존성 변경 감지
      # 제외 패턴 (선택 사항):
      # - '!NodeBackendServer/node_modules/**'
      # - '!NodeBackendServer/.env'

jobs:
  deploy:
    runs-on: ubuntu-latest # 최신 Ubuntu Runner 사용

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # 코드 체크아웃

      - name: Install cloudflared
        run: |
          echo "Downloading latest cloudflared..."
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          echo "Installing cloudflared..."
          sudo dpkg -i cloudflared.deb
          echo "cloudflared installation verification:"
          cloudflared --version

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          # 백엔드 LXC 접속용 개인 키 (Secret에 저장)
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} 

      - name: Sync files via rsync using cloudflared ProxyCommand (SSH mode)
        env:
          # SSH 프록시 명령 정의
          SSH_PROXY_COMMAND: ssh -v -o "StrictHostKeyChecking=accept-new" -o "ProxyCommand cloudflared access ssh --hostname ${{ secrets.SSH_HOST_TUNNEL }}"
        run: |
          echo "Starting rsync with cloudflared proxy (SSH mode)..."
          # 제외할 파일/폴더 목록을 --exclude 옵션으로 지정
          rsync -avz --delete \
            --exclude 'bak/' \               # bak 폴더 제외
            --exclude 'node_modules/' \      # node_modules 폴더 제외
            --exclude 'package-lock.json' \  # package-lock.json 파일 제외
            --exclude 'package.json' \       # package.json 파일 제외
            --exclude '.env' \               # .env 파일 제외
            -e "${SSH_PROXY_COMMAND}" \
            ${{ github.workspace }}/NodeBackendServer/ \ # 소스 경로 수정 (NodeBackendServer 디렉토리 명시)
            ${{ secrets.SSH_USER_BACKEND }}@${{ secrets.SSH_HOST_TUNNEL }}:${{ secrets.TARGET_PATH }}/ # 대상 경로
          echo "Rsync completed."

      - name: Clean up SSH Agent # 보안을 위해 에이전트 정리
        if: always() 
        run: ssh-agent -k
